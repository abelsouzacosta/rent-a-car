{
  "openapi": "3.0.0",
  "info": {
    "title": "RentalX Documentation",
    "description": "This is an Api Rent",
    "version": "1.0.0",
    "contact": {
      "email": "abelsouzacosta@gmail.com"
    }
  },
  "paths": {
    "/categories": {
      "post": {
        "tags": ["Category"],
        "summary": "Create a new category",
        "description": "Create a new Category",
        "security": [
          { "bearerAuth": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "SUV",
                  "description": "Categoria de carros SUV"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Category already exists"
          }
        }
      },
      "get": {
        "tags": ["Category"],
        "summary": "List all categories in the database",
        "description": "Returns a list with all categories inserted in the database",
        "responses": {
          "200": {
            "description":"Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "put": {
        "tags":["Category"],
        "summary": "Update an Category",
        "description": "Update an category with the given id",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the category",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "SUV",
                  "description": "Categoria de carros SUV"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Category not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Category"],
        "summary": "Delete a category",
        "description": "Delete the category with the given id",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the category",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example":"Category not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/specifications": {
      "post": {
        "tags": ["Specifications"],
        "summary": "Create a new Specification",
        "description": "Create a new Specification",
        "security": [
          { "bearerAuth": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "required": true
                  },
                  "description": {
                    "type": "string",
                    "required": true
                  }
                },
                "example": {
                  "name": "Specification",
                  "description": "Specification description"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Category already exists"
          }
        }
      },
      "get": {
        "tags":["Specifications"],
        "summary": "List all specifications in the database",
        "description": "Returns a list with all specifications inserted in the database",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Specification"
                      },
                      "description": {
                        "type": "string",
                        "example": "Specification description"
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2020-08-12T22:10:32.99wz"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/specifications/{id}": {
      "put": {
        "tags": ["Specifications"],
        "summary": "Update an Specification",
        "description": "Update the specification with the given id",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description":"The id of the specification",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "Specification",
                  "description":"Specification description"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Specification not found"
          },
          "400": {
            "description": "Specification name already taken"
          }
        }
      },
      "delete": {
        "tags":["Specifications"],
        "summary": "Delete a specification",
        "description": "Delete a specification with the given id",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description":"The id of the specification",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Specification not found"
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": ["Authenticate"],
        "summary": "Authentication user",
        "description": "Authentication user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "email": "user@mail.com",
                  "password": "pass"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/cars": {
      "post": {
        "tags": ["Cars"],
        "summary": "Creates a car instance",
        "description": "Creates a car",
        "security": [
          { "bearerAuth": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "daily_rate": {
                    "type": "number",
                    "format": "float"
                  },
                  "license_plate": {
                    "type": "string"
                  },
                  "fine_amount": {
                    "type": "number",
                    "format": "float"
                  },
                  "brand": {
                    "type": "string"
                  },
                  "category_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "example": {
                  "name": "Voyage",
                  "description": "Seda de entrada",
                  "daily_rate": 250.44,
                  "license_plate": "KLI89J76",
                  "fine_amount": 1000,
                  "brand": "Volkswagen",
                  "category_id": "6b5a68b9-4111-469f-b709-5b1b26f1eadf"
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Category not found"
          },
          "201": {
            "description": "Created"
          }
        }
      },
      "get": {
        "tags": ["Cars"],
        "summary": "All cars",
        "description": "Return a list of all cars in the database",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "daily_rate": {
                        "type": "number",
                        "format": "float"
                      },
                      "avaliable": {
                        "type": "boolean"
                      },
                      "license_plate": {
                        "type": "string"
                      },
                      "fine_amount": {
                        "type": "number",
                        "format": "float"
                      },
                      "brand": {
                        "type": "string"
                      },
                      "category_id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
